// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(ViajeContext))]
    partial class ViajeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Domain.Models.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("Domain.Models.JourneyFlight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdFlightFk")
                        .HasColumnType("int");

                    b.Property<int>("IdJourneyFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFlightFk");

                    b.HasIndex("IdJourneyFk");

                    b.ToTable("journeyflight", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FlightCarrier")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("IdFlightFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFlightFk");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Domain.Models.JourneyFlight", b =>
                {
                    b.HasOne("Domain.Models.Flight", "Flights")
                        .WithMany("JourneyFlights")
                        .HasForeignKey("IdFlightFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Journey", "Journeys")
                        .WithMany("JourneyFlights")
                        .HasForeignKey("IdJourneyFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flights");

                    b.Navigation("Journeys");
                });

            modelBuilder.Entity("Domain.Models.Transport", b =>
                {
                    b.HasOne("Domain.Models.Flight", "Flights")
                        .WithMany("Transports")
                        .HasForeignKey("IdFlightFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Domain.Models.Flight", b =>
                {
                    b.Navigation("JourneyFlights");

                    b.Navigation("Transports");
                });

            modelBuilder.Entity("Domain.Models.Journey", b =>
                {
                    b.Navigation("JourneyFlights");
                });
#pragma warning restore 612, 618
        }
    }
}
